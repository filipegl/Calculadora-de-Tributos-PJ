/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 05 22:11:32 GMT 2018
 */

package com.actionbarsherlock.internal.nineoldandroids.animation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import android.widget.ZoomButton;
import com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet;
import com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator;
import com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet;
import com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe;
import com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder;
import com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PropertyValuesHolder_ESTest extends PropertyValuesHolder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Keyframe.FloatKeyframe[] keyframe_FloatKeyframeArray0 = new Keyframe.FloatKeyframe[2];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe((-1462.4368F), (-1462.4368F));
      keyframe_FloatKeyframeArray0[0] = keyframe_FloatKeyframe0;
      keyframe_FloatKeyframeArray0[1] = keyframe_FloatKeyframeArray0[0];
      FloatKeyframeSet floatKeyframeSet0 = new FloatKeyframeSet(keyframe_FloatKeyframeArray0);
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("-h<<", floatKeyframeSet0);
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder1 = propertyValuesHolder_FloatPropertyValuesHolder0.clone();
      assertNotSame(propertyValuesHolder_FloatPropertyValuesHolder1, propertyValuesHolder_FloatPropertyValuesHolder0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[2];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("+@gIQu}'", intArray0);
      Class<Keyframe.IntKeyframe> class0 = Keyframe.IntKeyframe.class;
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.setupSetter(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.util.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Keyframe.IntKeyframe[] keyframe_IntKeyframeArray0 = new Keyframe.IntKeyframe[1];
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe(0.0F);
      keyframe_IntKeyframeArray0[0] = keyframe_IntKeyframe0;
      IntKeyframeSet intKeyframeSet0 = new IntKeyframeSet(keyframe_IntKeyframeArray0);
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("45%n Y'EP+", intKeyframeSet0);
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder1 = propertyValuesHolder_IntPropertyValuesHolder0.clone();
      assertNotSame(propertyValuesHolder_IntPropertyValuesHolder1, propertyValuesHolder_IntPropertyValuesHolder0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Keyframe.IntKeyframe[] keyframe_IntKeyframeArray0 = new Keyframe.IntKeyframe[6];
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe(3636.0F);
      keyframe_IntKeyframeArray0[0] = keyframe_IntKeyframe0;
      keyframe_IntKeyframeArray0[1] = keyframe_IntKeyframeArray0[0];
      keyframe_IntKeyframeArray0[3] = keyframe_IntKeyframe0;
      keyframe_IntKeyframeArray0[5] = keyframe_IntKeyframeArray0[3];
      IntKeyframeSet intKeyframeSet0 = new IntKeyframeSet(keyframe_IntKeyframeArray0);
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("", intKeyframeSet0);
      propertyValuesHolder_IntPropertyValuesHolder0.calculateValue(0.0F);
      assertEquals("", propertyValuesHolder_IntPropertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Keyframe.FloatKeyframe[] keyframe_FloatKeyframeArray0 = new Keyframe.FloatKeyframe[8];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe((-1.0F));
      keyframe_FloatKeyframeArray0[0] = keyframe_FloatKeyframe0;
      keyframe_FloatKeyframeArray0[1] = keyframe_FloatKeyframeArray0[0];
      keyframe_FloatKeyframeArray0[7] = keyframe_FloatKeyframeArray0[0];
      FloatKeyframeSet floatKeyframeSet0 = new FloatKeyframeSet(keyframe_FloatKeyframeArray0);
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("^i_4]FNW0I", floatKeyframeSet0);
      propertyValuesHolder_FloatPropertyValuesHolder0.calculateValue((-1593.0F));
      assertEquals("^i_4]FNW0I", propertyValuesHolder_FloatPropertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Keyframe[] keyframeArray0 = new Keyframe[3];
      Keyframe keyframe0 = Keyframe.ofObject(2466.716F);
      keyframeArray0[0] = keyframe0;
      keyframeArray0[2] = keyframe0;
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofKeyframe("Q_", keyframeArray0);
      assertEquals("Q_", propertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TypeEvaluator<Double> typeEvaluator0 = (TypeEvaluator<Double>) mock(TypeEvaluator.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(typeEvaluator0).evaluate(anyFloat() , anyDouble() , anyDouble());
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) " 4g+@b=;:]a?0y?n!g";
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject(" 4g+@b=;:]a?0y?n!g", typeEvaluator0, objectArray0);
      propertyValuesHolder0.calculateValue(3138.999F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      float[] floatArray0 = new float[9];
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofFloat((String) null, floatArray0);
      String string0 = propertyValuesHolder0.getPropertyName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      float[] floatArray0 = new float[8];
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("", floatArray0);
      String string0 = propertyValuesHolder_FloatPropertyValuesHolder0.getPropertyName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = PropertyValuesHolder.getMethodName("", "^PKC8bu");
      assertEquals("^PKC8bu", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = PropertyValuesHolder.getMethodName("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("Qqz N5AWzR", (IntKeyframeSet) null);
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Keyframe.IntKeyframe[] keyframe_IntKeyframeArray0 = new Keyframe.IntKeyframe[1];
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe(0.0F);
      keyframe_IntKeyframeArray0[0] = keyframe_IntKeyframe0;
      IntKeyframeSet intKeyframeSet0 = new IntKeyframeSet(keyframe_IntKeyframeArray0);
      ArrayList<Keyframe> arrayList0 = new ArrayList<Keyframe>();
      intKeyframeSet0.mKeyframes = arrayList0;
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("45%n Y'EP+", intKeyframeSet0);
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.setupStartValue(keyframe_IntKeyframe0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Keyframe.IntKeyframe[] keyframe_IntKeyframeArray0 = new Keyframe.IntKeyframe[3];
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe((-808.802F));
      keyframe_IntKeyframeArray0[2] = keyframe_IntKeyframe0;
      IntKeyframeSet intKeyframeSet0 = new IntKeyframeSet(keyframe_IntKeyframeArray0);
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder(":+QCcq", intKeyframeSet0);
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.setupSetterAndGetter((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Keyframe.IntKeyframe[] keyframe_IntKeyframeArray0 = new Keyframe.IntKeyframe[1];
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe(0.0F);
      keyframe_IntKeyframeArray0[0] = keyframe_IntKeyframe0;
      TypeEvaluator<Method> typeEvaluator0 = (TypeEvaluator<Method>) mock(TypeEvaluator.class, new ViolatedAssumptionAnswer());
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject("android.database.sqlite.SQLiteDatabase", typeEvaluator0, keyframe_IntKeyframeArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder0.setupEndValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[4];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("|Xo:q", intArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.setObjectValues((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      float[] floatArray0 = new float[9];
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofFloat("", floatArray0);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        propertyValuesHolder0.setObjectValues(objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[5];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("set", intArray0);
      Keyframe[] keyframeArray0 = new Keyframe[0];
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.setKeyframes(keyframeArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntEvaluator intEvaluator0 = new IntEvaluator();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "";
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject("", intEvaluator0, objectArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder0.setIntValues((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Keyframe.FloatKeyframe[] keyframe_FloatKeyframeArray0 = new Keyframe.FloatKeyframe[4];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe((-1055.495F));
      keyframe_FloatKeyframeArray0[3] = keyframe_FloatKeyframe0;
      FloatKeyframeSet floatKeyframeSet0 = new FloatKeyframeSet(keyframe_FloatKeyframeArray0);
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("dropbox", floatKeyframeSet0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        propertyValuesHolder_FloatPropertyValuesHolder0.setIntValues(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[7];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("expected <![CDATA[ for comment start", intArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.setFloatValues((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Keyframe.IntKeyframe[] keyframe_IntKeyframeArray0 = new Keyframe.IntKeyframe[2];
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe(336.5F);
      keyframe_IntKeyframeArray0[0] = keyframe_IntKeyframe0;
      keyframe_IntKeyframeArray0[1] = keyframe_IntKeyframeArray0[0];
      IntKeyframeSet intKeyframeSet0 = new IntKeyframeSet(keyframe_IntKeyframeArray0);
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("-7qi(] /C@I_1o(Fk3", intKeyframeSet0);
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.setFloatValues(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TypeEvaluator<Keyframe> typeEvaluator0 = (TypeEvaluator<Keyframe>) mock(TypeEvaluator.class, new ViolatedAssumptionAnswer());
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        PropertyValuesHolder.ofObject("]J20R:(y mFJ,9LE", typeEvaluator0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Keyframe[] keyframeArray0 = new Keyframe[0];
      // Undeclared exception!
      try { 
        PropertyValuesHolder.ofKeyframe("qg|wH", keyframeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertyValuesHolder.ofInt("B,YDkN\"c^S@Eix\"", (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        PropertyValuesHolder.ofInt("Couldn't find ", intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertyValuesHolder.ofFloat("android.content.pm.InstrumentationInfo", (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        PropertyValuesHolder.ofFloat("ZI*<Z~Y", floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TypeEvaluator<Object> typeEvaluator0 = (TypeEvaluator<Object>) mock(TypeEvaluator.class, new ViolatedAssumptionAnswer());
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "paU";
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject("paU", typeEvaluator0, objectArray0);
      propertyValuesHolder0.mKeyframeSet = null;
      // Undeclared exception!
      try { 
        propertyValuesHolder0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Keyframe.FloatKeyframe[] keyframe_FloatKeyframeArray0 = new Keyframe.FloatKeyframe[8];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(1379.43F, (-1579.0F));
      keyframe_FloatKeyframeArray0[0] = keyframe_FloatKeyframe0;
      keyframe_FloatKeyframeArray0[2] = keyframe_FloatKeyframeArray0[0];
      keyframe_FloatKeyframeArray0[5] = keyframe_FloatKeyframeArray0[2];
      keyframe_FloatKeyframeArray0[7] = keyframe_FloatKeyframeArray0[5];
      FloatKeyframeSet floatKeyframeSet0 = new FloatKeyframeSet(keyframe_FloatKeyframeArray0);
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("android.intent.extra.INTENT", floatKeyframeSet0);
      // Undeclared exception!
      try { 
        propertyValuesHolder_FloatPropertyValuesHolder0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      float[] floatArray0 = new float[7];
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofFloat("android.resource", floatArray0);
      Keyframe[] keyframeArray0 = new Keyframe[3];
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe((-1076.57F));
      keyframeArray0[0] = (Keyframe) keyframe_IntKeyframe0;
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe((-1076.57F));
      keyframeArray0[1] = (Keyframe) keyframe_FloatKeyframe0;
      keyframeArray0[2] = (Keyframe) keyframe_IntKeyframe0;
      propertyValuesHolder0.setKeyframes(keyframeArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder0.clone();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet cannot be cast to com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IntEvaluator intEvaluator0 = new IntEvaluator();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) intEvaluator0;
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject("RH*vXOp(rmcg{ ;aI", intEvaluator0, objectArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder0.calculateValue((-1.0F));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator cannot be cast to java.lang.Integer
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Keyframe.IntKeyframe[] keyframe_IntKeyframeArray0 = new Keyframe.IntKeyframe[2];
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe(336.5F);
      keyframe_IntKeyframeArray0[0] = keyframe_IntKeyframe0;
      keyframe_IntKeyframeArray0[1] = keyframe_IntKeyframeArray0[0];
      IntKeyframeSet intKeyframeSet0 = new IntKeyframeSet(keyframe_IntKeyframeArray0);
      float[] floatArray0 = new float[9];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("-7qi(] /C@I_1o(Fk3", intKeyframeSet0);
      propertyValuesHolder_IntPropertyValuesHolder0.setFloatValues(floatArray0);
      assertEquals("-7qi(] /C@I_1o(Fk3", propertyValuesHolder_IntPropertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IntEvaluator intEvaluator0 = new IntEvaluator();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) intEvaluator0;
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject("RH*vXOp(rmcg{ ;aI", intEvaluator0, objectArray0);
      PropertyValuesHolder propertyValuesHolder1 = propertyValuesHolder0.clone();
      assertNotSame(propertyValuesHolder1, propertyValuesHolder0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[8];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("get", intArray0);
      propertyValuesHolder_IntPropertyValuesHolder0.setIntValues(intArray0);
      assertEquals(8, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[1];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("P(^Xg[xq", intArray0);
      IntEvaluator intEvaluator0 = new IntEvaluator();
      propertyValuesHolder_IntPropertyValuesHolder0.setEvaluator(intEvaluator0);
      assertEquals("P(^Xg[xq", propertyValuesHolder_IntPropertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Keyframe.FloatKeyframe[] keyframe_FloatKeyframeArray0 = new Keyframe.FloatKeyframe[2];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe((-1462.4368F), (-1462.4368F));
      keyframe_FloatKeyframeArray0[0] = keyframe_FloatKeyframe0;
      keyframe_FloatKeyframeArray0[1] = keyframe_FloatKeyframeArray0[0];
      FloatKeyframeSet floatKeyframeSet0 = new FloatKeyframeSet(keyframe_FloatKeyframeArray0);
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("-h<<", floatKeyframeSet0);
      int[] intArray0 = new int[7];
      propertyValuesHolder_FloatPropertyValuesHolder0.setIntValues(intArray0);
      assertEquals(7, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      float[] floatArray0 = new float[3];
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("#Gc7,h08IFCi|KNlv=", floatArray0);
      propertyValuesHolder_FloatPropertyValuesHolder0.setFloatValues(floatArray0);
      assertEquals(3, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Keyframe.FloatKeyframe[] keyframe_FloatKeyframeArray0 = new Keyframe.FloatKeyframe[1];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(1.0F);
      keyframe_FloatKeyframeArray0[0] = keyframe_FloatKeyframe0;
      FloatKeyframeSet floatKeyframeSet0 = new FloatKeyframeSet(keyframe_FloatKeyframeArray0);
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("Y", floatKeyframeSet0);
      Class<ZoomButton> class0 = ZoomButton.class;
      propertyValuesHolder_FloatPropertyValuesHolder0.setupSetter(class0);
      HashMap<String, Keyframe.IntKeyframe> hashMap0 = new HashMap<String, Keyframe.IntKeyframe>();
      HashMap<String, Keyframe> hashMap1 = new HashMap<String, Keyframe>(hashMap0);
      // Undeclared exception!
      try { 
        propertyValuesHolder_FloatPropertyValuesHolder0.setAnimatedValue(hashMap1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      float[] floatArray0 = new float[4];
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("xvDqTd", floatArray0);
      Double double0 = new Double(1043.0637F);
      propertyValuesHolder_FloatPropertyValuesHolder0.setAnimatedValue(double0);
      assertEquals("xvDqTd", propertyValuesHolder_FloatPropertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int[] intArray0 = new int[8];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder(": ", intArray0);
      propertyValuesHolder_IntPropertyValuesHolder0.setAnimatedValue(intArray0[6]);
      assertEquals(": ", propertyValuesHolder_IntPropertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = PropertyValuesHolder.getMethodName((String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      float[] floatArray0 = new float[4];
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("xvDqTd", floatArray0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) 0.0F;
      propertyValuesHolder_FloatPropertyValuesHolder0.setObjectValues(objectArray0);
      propertyValuesHolder_FloatPropertyValuesHolder0.init();
      assertEquals("xvDqTd", propertyValuesHolder_FloatPropertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      int[] intArray0 = new int[8];
      objectArray0[0] = (Object) intArray0[7];
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject(": ", (TypeEvaluator) null, objectArray0);
      propertyValuesHolder0.init();
      assertEquals(": ", propertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int[] intArray0 = new int[8];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder(": ", intArray0);
      propertyValuesHolder_IntPropertyValuesHolder0.init();
      assertEquals(": ", propertyValuesHolder_IntPropertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      int[] intArray0 = new int[8];
      objectArray0[0] = (Object) intArray0[6];
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject(": ", (TypeEvaluator) null, objectArray0);
      propertyValuesHolder0.setAnimatedValue(objectArray0[0]);
      assertEquals(": ", propertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Keyframe.FloatKeyframe[] keyframe_FloatKeyframeArray0 = new Keyframe.FloatKeyframe[1];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(1.0F);
      Keyframe.FloatKeyframe keyframe_FloatKeyframe1 = keyframe_FloatKeyframe0.clone();
      keyframe_FloatKeyframeArray0[0] = keyframe_FloatKeyframe1;
      FloatKeyframeSet floatKeyframeSet0 = new FloatKeyframeSet(keyframe_FloatKeyframeArray0);
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("Y", floatKeyframeSet0);
      Class<ZoomButton> class0 = ZoomButton.class;
      propertyValuesHolder_FloatPropertyValuesHolder0.setupSetter(class0);
      propertyValuesHolder_FloatPropertyValuesHolder0.setupSetterAndGetter(keyframe_FloatKeyframe1);
      assertEquals("Y", propertyValuesHolder_FloatPropertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Keyframe.FloatKeyframe[] keyframe_FloatKeyframeArray0 = new Keyframe.FloatKeyframe[1];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(1.0F);
      keyframe_FloatKeyframeArray0[0] = keyframe_FloatKeyframe0;
      FloatKeyframeSet floatKeyframeSet0 = new FloatKeyframeSet(keyframe_FloatKeyframeArray0);
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("Y", floatKeyframeSet0);
      Class<ZoomButton> class0 = ZoomButton.class;
      propertyValuesHolder_FloatPropertyValuesHolder0.setupSetter(class0);
      Object object0 = propertyValuesHolder_FloatPropertyValuesHolder0.getAnimatedValue();
      // Undeclared exception!
      try { 
        propertyValuesHolder_FloatPropertyValuesHolder0.setupSetterAndGetter(object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.util.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      int[] intArray0 = new int[8];
      objectArray0[0] = (Object) intArray0[0];
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject(": ", (TypeEvaluator) null, objectArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder0.setupSetterAndGetter(": ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.util.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      float[] floatArray0 = new float[4];
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("xvDqTd", floatArray0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) 0.0F;
      propertyValuesHolder_FloatPropertyValuesHolder0.setObjectValues(objectArray0);
      Class<ZoomButton> class0 = ZoomButton.class;
      // Undeclared exception!
      try { 
        propertyValuesHolder_FloatPropertyValuesHolder0.setupSetter(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.util.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Keyframe[] keyframeArray0 = new Keyframe[1];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe((-2161.4023F), (-1364.3882F));
      keyframeArray0[0] = (Keyframe) keyframe_FloatKeyframe0;
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofKeyframe("R(&*x,5]SZ", keyframeArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder0.setKeyframes(keyframeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Keyframe[] keyframeArray0 = new Keyframe[5];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe((-836.49054F));
      keyframeArray0[4] = (Keyframe) keyframe_FloatKeyframe0;
      // Undeclared exception!
      try { 
        PropertyValuesHolder.ofKeyframe("m|c4l&", keyframeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Keyframe.IntKeyframe[] keyframe_IntKeyframeArray0 = new Keyframe.IntKeyframe[1];
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe((-139.66F));
      keyframe_IntKeyframeArray0[0] = keyframe_IntKeyframe0;
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofKeyframe("uFn6K0$:  0  ", keyframe_IntKeyframeArray0);
      assertEquals("uFn6K0$:  0  ", propertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Keyframe.FloatKeyframe[] keyframe_FloatKeyframeArray0 = new Keyframe.FloatKeyframe[3];
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe((-1.0F), 1.0F);
      keyframe_FloatKeyframeArray0[1] = keyframe_FloatKeyframe0;
      keyframe_FloatKeyframeArray0[2] = keyframe_FloatKeyframeArray0[1];
      FloatKeyframeSet floatKeyframeSet0 = new FloatKeyframeSet(keyframe_FloatKeyframeArray0);
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder((String) null, floatKeyframeSet0);
      Object object0 = propertyValuesHolder_FloatPropertyValuesHolder0.getAnimatedValue();
      assertEquals(0.0F, object0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofFloat((-1.0F));
      Keyframe.FloatKeyframe[] keyframe_FloatKeyframeArray0 = new Keyframe.FloatKeyframe[7];
      keyframe_FloatKeyframeArray0[0] = (Keyframe.FloatKeyframe) keyframe0;
      TypeEvaluator<Keyframe.FloatKeyframe> typeEvaluator0 = (TypeEvaluator<Keyframe.FloatKeyframe>) mock(TypeEvaluator.class, new ViolatedAssumptionAnswer());
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject("u", typeEvaluator0, keyframe_FloatKeyframeArray0);
      Object object0 = propertyValuesHolder0.getAnimatedValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TypeEvaluator<PropertyValuesHolder> typeEvaluator0 = (TypeEvaluator<PropertyValuesHolder>) mock(TypeEvaluator.class, new ViolatedAssumptionAnswer());
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject("", typeEvaluator0, objectArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder0.setupEndValue(propertyValuesHolder0.mKeyframeSet);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.util.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Keyframe.IntKeyframe[] keyframe_IntKeyframeArray0 = new Keyframe.IntKeyframe[1];
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe(0.0F);
      keyframe_IntKeyframeArray0[0] = keyframe_IntKeyframe0;
      IntKeyframeSet intKeyframeSet0 = new IntKeyframeSet(keyframe_IntKeyframeArray0);
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("45%n Y'EP+", intKeyframeSet0);
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.setupStartValue(intKeyframeSet0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.util.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      int[] intArray0 = new int[8];
      objectArray0[0] = (Object) intArray0[7];
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofObject(": ", (TypeEvaluator) null, objectArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder0.calculateValue(991.3585F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        PropertyValuesHolder.ofObject(": ", (TypeEvaluator) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      float[] floatArray0 = new float[2];
      PropertyValuesHolder.FloatPropertyValuesHolder propertyValuesHolder_FloatPropertyValuesHolder0 = new PropertyValuesHolder.FloatPropertyValuesHolder("get", floatArray0);
      String string0 = propertyValuesHolder_FloatPropertyValuesHolder0.getPropertyName();
      assertEquals("get", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int[] intArray0 = new int[6];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder("v nADa%`/[4,k{I", intArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.setupStartValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      float[] floatArray0 = new float[1];
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofFloat("ZI*<Z~Y", floatArray0);
      String string0 = propertyValuesHolder0.toString();
      assertEquals("ZI*<Z~Y:  0.0  0.0  ", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      float[] floatArray0 = new float[1];
      PropertyValuesHolder propertyValuesHolder0 = PropertyValuesHolder.ofFloat("ZI*<Z~Y", floatArray0);
      propertyValuesHolder0.setPropertyName("");
      assertEquals("", propertyValuesHolder0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int[] intArray0 = new int[3];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = (PropertyValuesHolder.IntPropertyValuesHolder)PropertyValuesHolder.ofInt("", intArray0);
      // Undeclared exception!
      try { 
        propertyValuesHolder_IntPropertyValuesHolder0.setupSetterAndGetter("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.util.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int[] intArray0 = new int[8];
      PropertyValuesHolder.IntPropertyValuesHolder propertyValuesHolder_IntPropertyValuesHolder0 = new PropertyValuesHolder.IntPropertyValuesHolder(": ", intArray0);
      Object object0 = propertyValuesHolder_IntPropertyValuesHolder0.getAnimatedValue();
      assertEquals(0, object0);
  }
}
