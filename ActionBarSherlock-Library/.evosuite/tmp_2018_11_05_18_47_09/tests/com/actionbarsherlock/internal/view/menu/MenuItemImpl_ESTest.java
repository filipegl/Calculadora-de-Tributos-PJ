/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 05 21:38:48 GMT 2018
 */

package com.actionbarsherlock.internal.view.menu;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.view.ContextMenu;
import android.view.View;
import com.actionbarsherlock.internal.view.menu.MenuBuilder;
import com.actionbarsherlock.internal.view.menu.MenuItemImpl;
import com.actionbarsherlock.internal.view.menu.SubMenuBuilder;
import com.actionbarsherlock.view.ActionProvider;
import com.actionbarsherlock.view.MenuItem;
import java.text.DecimalFormat;
import java.text.FieldPosition;
import java.text.Format;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MenuItemImpl_ESTest extends MenuItemImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.setIsActionButton(true);
      menuItemImpl0.setIsActionButton(true);
      assertTrue(menuItemImpl0.isActionButton());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.setVisibleInt(false);
      // Undeclared exception!
      try { 
        menuItemImpl0.setVisible(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-432), (CharSequence) null, (-432));
      // Undeclared exception!
      try { 
        menuItemImpl0.setShortcut('/', 'V');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-422), (-422), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.setVisibleInt(false);
      // Undeclared exception!
      try { 
        menuItemImpl0.setEnabled(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1606), (CharSequence) null, (-1606));
      menuItemImpl0.setVisibleInt(false);
      boolean boolean0 = menuItemImpl0.isEnabled();
      assertFalse(menuItemImpl0.isVisible());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.setVisibleInt(false);
      menuItemImpl0.setVisible(false);
      assertFalse(menuItemImpl0.isVisible());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-1735), (-1735), 389, (-1735), (CharSequence) null, (-1735));
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setVisible(true);
      assertEquals((-1735), menuItemImpl1.getGroupId());
      assertTrue(menuItemImpl1.requestsActionButton());
      assertEquals(389, menuItemImpl1.getOrder());
      assertEquals((-1735), menuItemImpl1.getItemId());
      assertEquals((-1735), menuItemImpl1.getOrdering());
      assertTrue(menuItemImpl1.isEnabled());
      assertFalse(menuItemImpl1.showsTextAsAction());
      assertFalse(menuItemImpl1.isActionViewExpanded());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3609, 0, 0, stringBuffer0, 3609);
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setVisible(true);
      assertTrue(menuItemImpl1.requestsActionButton());
      assertEquals(0, menuItemImpl1.getOrder());
      assertEquals(0, menuItemImpl1.getGroupId());
      assertEquals(3609, menuItemImpl1.getItemId());
      assertEquals(0, menuItemImpl1.getOrdering());
      assertTrue(menuItemImpl1.isEnabled());
      assertFalse(menuItemImpl1.isActionViewExpanded());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 389, 389, (-1582), (-33), (CharSequence) null, (-1582));
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setVisible(true);
      assertFalse(menuItemImpl1.showsTextAsAction());
      assertTrue(menuItemImpl1.isEnabled());
      assertEquals((-33), menuItemImpl1.getOrdering());
      assertFalse(menuItemImpl1.requestsActionButton());
      assertEquals((-1582), menuItemImpl1.getOrder());
      assertEquals(389, menuItemImpl1.getItemId());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertEquals(389, menuItemImpl1.getGroupId());
      assertTrue(menuItemImpl1.requiresActionButton());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.setVisibleInt(false);
      MenuItem.OnMenuItemClickListener menuItem_OnMenuItemClickListener0 = mock(MenuItem.OnMenuItemClickListener.class, new ViolatedAssumptionAnswer());
      menuItemImpl0.setOnMenuItemClickListener(menuItem_OnMenuItemClickListener0);
      assertFalse(menuItemImpl0.isVisible());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 0, 0, 0, stringBuffer0, 0);
      MenuItem.OnMenuItemClickListener menuItem_OnMenuItemClickListener0 = mock(MenuItem.OnMenuItemClickListener.class, new ViolatedAssumptionAnswer());
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setOnMenuItemClickListener(menuItem_OnMenuItemClickListener0);
      assertFalse(menuItemImpl1.requiresActionButton());
      assertFalse(menuItemImpl1.requestsActionButton());
      assertEquals(0, menuItemImpl1.getOrder());
      assertFalse(menuItemImpl1.showsTextAsAction());
      assertEquals(0, menuItemImpl1.getGroupId());
      assertEquals(0, menuItemImpl1.getOrdering());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertTrue(menuItemImpl1.isEnabled());
      assertEquals(0, menuItemImpl1.getItemId());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 33, 3624, 33, 33, stringBuffer0, 3624);
      MenuItem.OnMenuItemClickListener menuItem_OnMenuItemClickListener0 = mock(MenuItem.OnMenuItemClickListener.class, new ViolatedAssumptionAnswer());
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setOnMenuItemClickListener(menuItem_OnMenuItemClickListener0);
      assertEquals(3624, menuItemImpl1.getItemId());
      assertFalse(menuItemImpl1.requestsActionButton());
      assertFalse(menuItemImpl1.requiresActionButton());
      assertEquals(33, menuItemImpl1.getOrder());
      assertEquals(33, menuItemImpl1.getGroupId());
      assertFalse(menuItemImpl1.showsTextAsAction());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertEquals(33, menuItemImpl1.getOrdering());
      assertTrue(menuItemImpl1.isEnabled());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.setVisibleInt(false);
      MenuItem.OnActionExpandListener menuItem_OnActionExpandListener0 = mock(MenuItem.OnActionExpandListener.class, new ViolatedAssumptionAnswer());
      menuItemImpl0.setOnActionExpandListener(menuItem_OnActionExpandListener0);
      assertFalse(menuItemImpl0.isVisible());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 3624, 0, stringBuffer0, 3624);
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setOnActionExpandListener((MenuItem.OnActionExpandListener) null);
      assertFalse(menuItemImpl1.requiresActionButton());
      assertTrue(menuItemImpl1.isEnabled());
      assertEquals(3624, menuItemImpl1.getOrder());
      assertEquals(0, menuItemImpl1.getGroupId());
      assertFalse(menuItemImpl1.requestsActionButton());
      assertEquals(3624, menuItemImpl1.getItemId());
      assertEquals(0, menuItemImpl1.getOrdering());
      assertFalse(menuItemImpl1.showsTextAsAction());
      assertFalse(menuItemImpl1.isActionViewExpanded());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 0, 0, 0, stringBuffer0, 0);
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setOnActionExpandListener((MenuItem.OnActionExpandListener) null);
      assertEquals(0, menuItemImpl1.getGroupId());
      assertEquals(0, menuItemImpl1.getOrdering());
      assertTrue(menuItemImpl1.isEnabled());
      assertEquals(0, menuItemImpl1.getOrder());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertFalse(menuItemImpl1.requiresActionButton());
      assertFalse(menuItemImpl1.showsTextAsAction());
      assertEquals(0, menuItemImpl1.getItemId());
      assertFalse(menuItemImpl1.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 389, 389, (-1582), (-33), (CharSequence) null, (-1582));
      MenuItem.OnActionExpandListener menuItem_OnActionExpandListener0 = mock(MenuItem.OnActionExpandListener.class, new ViolatedAssumptionAnswer());
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setOnActionExpandListener(menuItem_OnActionExpandListener0);
      assertEquals(389, menuItemImpl1.getItemId());
      assertEquals((-1582), menuItemImpl1.getOrder());
      assertFalse(menuItemImpl1.requestsActionButton());
      assertEquals((-33), menuItemImpl1.getOrdering());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertFalse(menuItemImpl1.showsTextAsAction());
      assertEquals(389, menuItemImpl1.getGroupId());
      assertTrue(menuItemImpl1.requiresActionButton());
      assertTrue(menuItemImpl1.isEnabled());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.setVisibleInt(false);
      menuItemImpl0.setIntent((Intent) null);
      assertFalse(menuItemImpl0.isVisible());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setIntent((Intent) null);
      assertEquals(0, menuItemImpl1.getOrdering());
      assertEquals(0, menuItemImpl1.getGroupId());
      assertEquals(0, menuItemImpl1.getOrder());
      assertFalse(menuItemImpl1.showsTextAsAction());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertEquals(3624, menuItemImpl1.getItemId());
      assertFalse(menuItemImpl1.requestsActionButton());
      assertFalse(menuItemImpl1.requiresActionButton());
      assertTrue(menuItemImpl1.isEnabled());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-1735), (-1582), (CharSequence) null, 389);
      menuItemImpl0.setVisibleInt(false);
      menuItemImpl0.setChecked(false);
      assertFalse(menuItemImpl0.isVisible());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setChecked(false);
      assertFalse(menuItemImpl1.showsTextAsAction());
      assertEquals(3624, menuItemImpl1.getItemId());
      assertEquals(0, menuItemImpl1.getGroupId());
      assertTrue(menuItemImpl1.isEnabled());
      assertEquals(0, menuItemImpl1.getOrder());
      assertEquals(0, menuItemImpl1.getOrdering());
      assertFalse(menuItemImpl1.requiresActionButton());
      assertFalse(menuItemImpl1.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.setVisibleInt(false);
      menuItemImpl0.setCheckable(false);
      assertFalse(menuItemImpl0.isVisible());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-1817), 2530, 3624, 3, "<?xml version='1.0'", (-3816));
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setCheckable(false);
      assertEquals(3, menuItemImpl1.getOrdering());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertEquals((-1817), menuItemImpl1.getGroupId());
      assertTrue(menuItemImpl1.isEnabled());
      assertEquals(3624, menuItemImpl1.getOrder());
      assertFalse(menuItemImpl1.requiresActionButton());
      assertFalse(menuItemImpl1.requestsActionButton());
      assertEquals(2530, menuItemImpl1.getItemId());
      assertFalse(menuItemImpl1.showsTextAsAction());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 0, 0, 0, stringBuffer0, 0);
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setCheckable(false);
      assertFalse(menuItemImpl1.requestsActionButton());
      assertEquals(0, menuItemImpl1.getGroupId());
      assertFalse(menuItemImpl1.requiresActionButton());
      assertEquals(0, menuItemImpl1.getItemId());
      assertFalse(menuItemImpl1.showsTextAsAction());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertEquals(0, menuItemImpl1.getOrdering());
      assertEquals(0, menuItemImpl1.getOrder());
      assertTrue(menuItemImpl1.isEnabled());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 116, (-432), 2756, 116, (CharSequence) null, 4);
      assertFalse(menuItemImpl0.isCheckable());
      
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setCheckable(false);
      assertTrue(menuItemImpl1.showsTextAsAction());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertEquals(116, menuItemImpl1.getGroupId());
      assertEquals(2756, menuItemImpl1.getOrder());
      assertEquals(116, menuItemImpl1.getOrdering());
      assertFalse(menuItemImpl1.requestsActionButton());
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals((-432), menuItemImpl1.getItemId());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.setVisibleInt(false);
      menuItemImpl0.setCallback((Runnable) null);
      assertFalse(menuItemImpl0.isVisible());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), 8, (-1582), (CharSequence) null, 389);
      Thread thread0 = MockThread.currentThread();
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setCallback(thread0);
      assertTrue(menuItemImpl1.requestsActionButton());
      assertFalse(menuItemImpl1.isCheckable());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertTrue(menuItemImpl1.showsTextAsAction());
      assertTrue(menuItemImpl1.isEnabled());
      assertEquals((-1582), menuItemImpl1.getOrdering());
      assertEquals((-33), menuItemImpl1.getGroupId());
      assertEquals(8, menuItemImpl1.getOrder());
      assertEquals((-432), menuItemImpl1.getItemId());
      assertFalse(menuItemImpl1.requiresActionButton());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), 3, (-1735), (-1582), (CharSequence) null, 389);
      Thread thread0 = MockThread.currentThread();
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setCallback(thread0);
      assertFalse(menuItemImpl1.isCheckable());
      assertTrue(menuItemImpl1.isEnabled());
      assertEquals((-1582), menuItemImpl1.getOrdering());
      assertEquals((-33), menuItemImpl1.getGroupId());
      assertTrue(menuItemImpl1.showsTextAsAction());
      assertEquals(3, menuItemImpl1.getItemId());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertTrue(menuItemImpl1.requestsActionButton());
      assertEquals((-1735), menuItemImpl1.getOrder());
      assertFalse(menuItemImpl1.requiresActionButton());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 1085, (-432), (-1735), (-1582), (CharSequence) null, 389);
      MockThread mockThread0 = new MockThread();
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setCallback(mockThread0);
      assertTrue(menuItemImpl1.showsTextAsAction());
      assertEquals((-1582), menuItemImpl1.getOrdering());
      assertTrue(menuItemImpl1.isEnabled());
      assertTrue(menuItemImpl1.requestsActionButton());
      assertEquals((-1735), menuItemImpl1.getOrder());
      assertEquals(1085, menuItemImpl1.getGroupId());
      assertEquals((-432), menuItemImpl1.getItemId());
      assertFalse(menuItemImpl1.isActionViewExpanded());
      assertFalse(menuItemImpl1.isCheckable());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      menuItemImpl0.setVisibleInt(false);
      menuItemImpl0.setAlphabeticShortcut('\u0000');
      assertFalse(menuItemImpl0.isVisible());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(0);
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      CharSequence charSequence0 = menuItemImpl0.getTitleCondensed();
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals(0, menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertNotNull(charSequence0);
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertEquals(3624, menuItemImpl0.getItemId());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      CharSequence charSequence0 = menuItemImpl0.getTitleCondensed();
      assertEquals(0, menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals(3624, menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals(0, menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertNotNull(charSequence0);
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.isCheckable());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      menuItemImpl0.getTitle();
      assertEquals((-432), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.isCheckable());
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals((-1603), menuItemImpl0.getOrdering());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.requestsActionButton());
      assertTrue(menuItemImpl0.showsTextAsAction());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("<?xml version='1.0'");
      StringBuffer stringBuffer0 = new StringBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      StringBuffer stringBuffer1 = decimalFormat0.format((double) 0, stringBuffer0, fieldPosition0);
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer1, 3624);
      menuItemImpl0.getTitle();
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals(0, menuItemImpl0.getOrder());
      assertEquals(3624, menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-1582), (-1582), (-2422), 108, (CharSequence) null, (-432));
      int int0 = menuItemImpl0.getOrdering();
      assertEquals((-1582), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals(108, int0);
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals((-2422), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals((-1582), menuItemImpl0.getGroupId());
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 12, 3624, 12, 12, stringBuffer0, 3624);
      int int0 = menuItemImpl0.getOrder();
      assertFalse(menuItemImpl0.isCheckable());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals(12, menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertEquals(12, int0);
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals(12, menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals(3624, menuItemImpl0.getItemId());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      int int0 = menuItemImpl0.getOrder();
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-432), int0);
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 0, 0, 0, stringBuffer0, 0);
      int int0 = menuItemImpl0.getItemId();
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals(0, int0);
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals(0, menuItemImpl0.getOrder());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      int int0 = menuItemImpl0.getItemId();
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertEquals((-432), int0);
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      int int0 = menuItemImpl0.getGroupId();
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals(3624, menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals(0, int0);
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals(0, menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.isActionViewExpanded());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 3, (-432), (-432), (-1603), (CharSequence) null, (-1603));
      int int0 = menuItemImpl0.getGroupId();
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals(3, int0);
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-1603), menuItemImpl0.getOrdering());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.showsTextAsAction());
      assertTrue(menuItemImpl0.requestsActionButton());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isActionViewExpanded());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      // Undeclared exception!
      try { 
        menuItemImpl0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-33), (-33), (-1582), (CharSequence) null, (-1582));
      // Undeclared exception!
      try { 
        menuItemImpl0.shouldShowShortcut();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-1735), (-1582), (CharSequence) null, 389);
      // Undeclared exception!
      try { 
        menuItemImpl0.setTitle((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-5), (-5), 3373, 0, (CharSequence) null, 0);
      // Undeclared exception!
      try { 
        menuItemImpl0.setCheckedInt(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      // Undeclared exception!
      try { 
        menuItemImpl0.getShortcutLabel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      // Undeclared exception!
      try { 
        menuItemImpl0.getShortcut();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-1989), (-1989), (-1989), (-1989), stringBuilder0, (-178));
      // Undeclared exception!
      try { 
        menuItemImpl0.setShowAsAction(25);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-1989), (-1989), (-1989), (-1989), stringBuilder0, (-178));
      // Undeclared exception!
      try { 
        menuItemImpl0.setShowAsAction((-178));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-1989), (-1989), (-1989), (-1989), stringBuilder0, '>');
      // Undeclared exception!
      try { 
        menuItemImpl0.setShowAsAction((-1989));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SHOW_AS_ACTION_ALWAYS, SHOW_AS_ACTION_IF_ROOM, and SHOW_AS_ACTION_NEVER are mutually exclusive.
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      menuItemImpl0.getTitle();
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals(3624, menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertEquals(0, menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals(0, menuItemImpl0.getOrdering());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      boolean boolean0 = menuItemImpl0.hasCollapsibleActionView();
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(boolean0);
      assertFalse(menuItemImpl0.isCheckable());
      assertTrue(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.showsTextAsAction());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertEquals((-1603), menuItemImpl0.getOrdering());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      boolean boolean0 = menuItemImpl0.hasCollapsibleActionView();
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(boolean0);
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals((-432), menuItemImpl0.getItemId());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-432), (CharSequence) null, (-432));
      boolean boolean0 = menuItemImpl0.collapseActionView();
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(boolean0);
      assertEquals((-432), menuItemImpl0.getOrder());
      assertEquals((-432), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.requiresActionButton());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      boolean boolean0 = menuItemImpl0.collapseActionView();
      assertTrue(boolean0);
      assertEquals(0, menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.isCheckable());
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertEquals(0, menuItemImpl0.getOrder());
      assertEquals(3624, menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      boolean boolean0 = menuItemImpl0.expandActionView();
      assertFalse(boolean0);
      assertFalse(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.requestsActionButton());
      assertTrue(menuItemImpl0.showsTextAsAction());
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertEquals((-1603), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.isCheckable());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      boolean boolean0 = menuItemImpl0.expandActionView();
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertTrue(menuItemImpl0.isEnabled());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(boolean0);
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.getActionView();
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.isCheckable());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-1582), (-1582), (-2443), (-2), (CharSequence) null, (-432));
      // Undeclared exception!
      try { 
        menuItemImpl0.setActionView((View) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      // Undeclared exception!
      try { 
        menuItemImpl0.setShowAsActionFlags((-33));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SHOW_AS_ACTION_ALWAYS, SHOW_AS_ACTION_IF_ROOM, and SHOW_AS_ACTION_NEVER are mutually exclusive.
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      // Undeclared exception!
      try { 
        menuItemImpl0.setShowAsActionFlags((-1603));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-1989), (-1989), (-1989), (-1989), stringBuilder0, (-178));
      // Undeclared exception!
      try { 
        menuItemImpl0.setShowAsAction(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      boolean boolean0 = menuItemImpl0.showsTextAsAction();
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertTrue(boolean0);
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertTrue(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals((-1603), menuItemImpl0.getOrdering());
      assertEquals((-432), menuItemImpl0.getItemId());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-432), (CharSequence) null, (-432));
      boolean boolean0 = menuItemImpl0.showsTextAsAction();
      assertEquals((-432), menuItemImpl0.getOrdering());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(boolean0);
      assertEquals((-432), menuItemImpl0.getOrder());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.setIsActionButton(false);
      assertEquals((-432), menuItemImpl0.getOrder());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.isActionButton());
      assertEquals((-432), menuItemImpl0.getItemId());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      boolean boolean0 = menuItemImpl0.requiresActionButton();
      assertTrue(boolean0);
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-432), (CharSequence) null, (-432));
      boolean boolean0 = menuItemImpl0.requiresActionButton();
      assertFalse(menuItemImpl0.requestsActionButton());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertEquals((-432), menuItemImpl0.getOrdering());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(boolean0);
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      boolean boolean0 = menuItemImpl0.requestsActionButton();
      assertEquals((-1603), menuItemImpl0.getOrdering());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertTrue(menuItemImpl0.showsTextAsAction());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertTrue(boolean0);
      assertFalse(menuItemImpl0.requiresActionButton());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-432), (CharSequence) null, (-432));
      boolean boolean0 = menuItemImpl0.requestsActionButton();
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertEquals((-432), menuItemImpl0.getOrdering());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(boolean0);
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-33), (CharSequence) null, (-33));
      boolean boolean0 = menuItemImpl0.isActionButton();
      assertFalse(boolean0);
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertEquals((-33), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.isCheckable());
      assertTrue(menuItemImpl0.showsTextAsAction());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertTrue(menuItemImpl0.isEnabled());
      assertTrue(menuItemImpl0.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      boolean boolean0 = menuItemImpl0.setVisibleInt(true);
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals((-1603), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(boolean0);
      assertEquals((-432), menuItemImpl0.getOrder());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.isEnabled());
      assertTrue(menuItemImpl0.requestsActionButton());
      assertTrue(menuItemImpl0.showsTextAsAction());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-33), (CharSequence) null, (-33));
      boolean boolean0 = menuItemImpl0.isVisible();
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertTrue(menuItemImpl0.requestsActionButton());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertEquals((-33), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isCheckable());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      assertTrue(menuItemImpl0.isVisible());
      
      menuItemImpl0.setVisibleInt(false);
      boolean boolean0 = menuItemImpl0.isVisible();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-33), (-33), (-1582), (CharSequence) null, (-1582));
      assertFalse(menuItemImpl0.isActionButton());
      
      menuItemImpl0.setCheckedInt(false);
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals((-33), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertEquals((-33), menuItemImpl0.getOrder());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-36), (-459), (-1735), (-1582), (CharSequence) null, 389);
      menuItemImpl0.setExclusiveCheckable(true);
      // Undeclared exception!
      try { 
        menuItemImpl0.setChecked(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      boolean boolean0 = menuItemImpl0.isChecked();
      assertEquals((-432), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(boolean0);
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-33), (-33), (-1582), (CharSequence) null, (-1582));
      boolean boolean0 = menuItemImpl0.isExclusiveCheckable();
      assertFalse(boolean0);
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertEquals((-33), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-33), menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-432), (CharSequence) null, (-432));
      menuItemImpl0.setExclusiveCheckable(false);
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.isActionButton());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertFalse(menuItemImpl0.isExclusiveCheckable());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-432), menuItemImpl0.getOrdering());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      // Undeclared exception!
      try { 
        menuItemImpl0.setCheckable(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      boolean boolean0 = menuItemImpl0.isCheckable();
      assertEquals((-432), menuItemImpl0.getItemId());
      assertFalse(boolean0);
      assertTrue(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1606), (CharSequence) null, (-1606));
      menuItemImpl0.getIcon();
      assertFalse(menuItemImpl0.requestsActionButton());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertEquals((-1606), menuItemImpl0.getOrdering());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      // Undeclared exception!
      try { 
        menuItemImpl0.setTitleCondensed((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      // Undeclared exception!
      try { 
        menuItemImpl0.setTitleCondensed(stringBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1606), (CharSequence) null, (-1606));
      menuItemImpl0.getTitleCondensed();
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertEquals((-1606), menuItemImpl0.getOrdering());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-33), menuItemImpl0.getGroupId());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      boolean boolean0 = menuItemImpl0.hasSubMenu();
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      // Undeclared exception!
      try { 
        menuItemImpl0.setNumericShortcut('o');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      MenuItemImpl menuItemImpl1 = (MenuItemImpl)menuItemImpl0.setAlphabeticShortcut('\u0000');
      assertTrue(menuItemImpl1.requestsActionButton());
      assertEquals((-432), menuItemImpl1.getOrder());
      assertFalse(menuItemImpl1.requiresActionButton());
      assertTrue(menuItemImpl1.isEnabled());
      assertTrue(menuItemImpl1.showsTextAsAction());
      assertEquals((-1603), menuItemImpl1.getOrdering());
      assertEquals((-432), menuItemImpl1.getItemId());
      assertFalse(menuItemImpl1.isCheckable());
      assertEquals((-33), menuItemImpl1.getGroupId());
      assertFalse(menuItemImpl1.isActionViewExpanded());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-1989), (-1989), (-1989), (-1989), stringBuilder0, (-178));
      // Undeclared exception!
      try { 
        menuItemImpl0.setAlphabeticShortcut('+');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-33), (CharSequence) null, (-33));
      // Undeclared exception!
      try { 
        menuItemImpl0.setEnabled(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      MenuItem.OnMenuItemClickListener menuItem_OnMenuItemClickListener0 = mock(MenuItem.OnMenuItemClickListener.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(menuItem_OnMenuItemClickListener0).onMenuItemClick(any(com.actionbarsherlock.view.MenuItem.class));
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, "t6V*|%]tvR", 49);
      menuItemImpl0.setOnMenuItemClickListener(menuItem_OnMenuItemClickListener0);
      // Undeclared exception!
      try { 
        menuItemImpl0.invoke();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      MenuItem.OnMenuItemClickListener menuItem_OnMenuItemClickListener0 = mock(MenuItem.OnMenuItemClickListener.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(menuItem_OnMenuItemClickListener0).onMenuItemClick(any(com.actionbarsherlock.view.MenuItem.class));
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, "t6V*|%]tvR", 49);
      menuItemImpl0.setOnMenuItemClickListener(menuItem_OnMenuItemClickListener0);
      boolean boolean0 = menuItemImpl0.invoke();
      assertEquals(0, menuItemImpl0.getOrdering());
      assertEquals(0, menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals(3624, menuItemImpl0.getItemId());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertTrue(boolean0);
      assertTrue(menuItemImpl0.requestsActionButton());
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-432), (CharSequence) null, (-432));
      // Undeclared exception!
      try { 
        menuItemImpl0.invoke();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-5), (-5), 3373, 3373, (CharSequence) null, 0);
      // Undeclared exception!
      try { 
        menuItemImpl0.setActionView((-5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      menuItemImpl0.getSubMenu();
      assertEquals(0, menuItemImpl0.getOrdering());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertEquals(0, menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals(3624, menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      menuItemImpl0.getAlphabeticShortcut();
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals((-1603), menuItemImpl0.getOrdering());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.requestsActionButton());
      assertTrue(menuItemImpl0.isEnabled());
      assertTrue(menuItemImpl0.showsTextAsAction());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      menuItemImpl0.getNumericShortcut();
      assertEquals(3624, menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals(0, menuItemImpl0.getOrder());
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 3624, 0, stringBuffer0, 3624);
      menuItemImpl0.getIntent();
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertEquals(3624, menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertEquals(3624, menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 3624, 0, stringBuffer0, 3624);
      int int0 = menuItemImpl0.getItemId();
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals(3624, int0);
      assertEquals(0, menuItemImpl0.getGroupId());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals(3624, menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.requiresActionButton());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-46), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      // Undeclared exception!
      try { 
        menuItemImpl0.setActionProvider((ActionProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-432), (CharSequence) null, (-432));
      boolean boolean0 = menuItemImpl0.isActionViewExpanded();
      assertEquals((-432), menuItemImpl0.getOrder());
      assertEquals((-432), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(boolean0);
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-1735), (-1582), (CharSequence) null, 389);
      // Undeclared exception!
      try { 
        menuItemImpl0.setIcon((Drawable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-432), (CharSequence) null, (-432));
      int int0 = menuItemImpl0.getGroupId();
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertEquals((-33), int0);
      assertFalse(menuItemImpl0.isCheckable());
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals((-432), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-1735), (-33), (CharSequence) null, 389);
      menuItemImpl0.setMenuInfo((ContextMenu.ContextMenuInfo) null);
      assertTrue(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertEquals((-33), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertEquals((-1735), menuItemImpl0.getOrder());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertTrue(menuItemImpl0.showsTextAsAction());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("t6V*|%]tvR");
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 3624, 0, stringBuffer0, 3624);
      menuItemImpl0.toString();
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertEquals(3624, menuItemImpl0.getOrder());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertEquals(3624, menuItemImpl0.getItemId());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      // Undeclared exception!
      try { 
        menuItemImpl0.shouldShowIcon();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      // Undeclared exception!
      try { 
        menuItemImpl0.actionFormatChanged();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1603), (CharSequence) null, (-1603));
      // Undeclared exception!
      try { 
        menuItemImpl0.setIcon((-432));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      int int0 = menuItemImpl0.getOrder();
      assertEquals(0, menuItemImpl0.getGroupId());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertEquals(0, int0);
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals(3624, menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-1582), (CharSequence) null, (-1582));
      menuItemImpl0.getMenuInfo();
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.requiresActionButton());
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals((-1582), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.requestsActionButton());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-1582), (-1582), (-2443), (-2), (CharSequence) null, (-432));
      int int0 = menuItemImpl0.getOrdering();
      assertEquals((-1582), menuItemImpl0.getItemId());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-2), int0);
      assertEquals((-2443), menuItemImpl0.getOrder());
      assertTrue(menuItemImpl0.isEnabled());
      assertEquals((-1582), menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertFalse(menuItemImpl0.isCheckable());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-36), (-459), (-1735), (-1582), (CharSequence) null, 389);
      // Undeclared exception!
      try { 
        menuItemImpl0.setTitle(389);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, "t6V*|%]tvR", 49);
      // Undeclared exception!
      try { 
        menuItemImpl0.setActionViewExpanded(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, 0, 3624, 0, 0, stringBuffer0, 3624);
      menuItemImpl0.getActionProvider();
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertFalse(menuItemImpl0.isCheckable());
      assertEquals(0, menuItemImpl0.getOrdering());
      assertEquals(0, menuItemImpl0.getOrder());
      assertEquals(0, menuItemImpl0.getGroupId());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.showsTextAsAction());
      assertEquals(3624, menuItemImpl0.getItemId());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.requiresActionButton());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-33), (CharSequence) null, (-33));
      // Undeclared exception!
      try { 
        menuItemImpl0.setSubMenu((SubMenuBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      MenuItemImpl menuItemImpl0 = new MenuItemImpl((MenuBuilder) null, (-33), (-432), (-432), (-432), (CharSequence) null, (-432));
      menuItemImpl0.getCallback();
      assertEquals((-33), menuItemImpl0.getGroupId());
      assertTrue(menuItemImpl0.isEnabled());
      assertFalse(menuItemImpl0.isActionViewExpanded());
      assertEquals((-432), menuItemImpl0.getOrder());
      assertEquals((-432), menuItemImpl0.getItemId());
      assertEquals((-432), menuItemImpl0.getOrdering());
      assertFalse(menuItemImpl0.isCheckable());
      assertFalse(menuItemImpl0.requiresActionButton());
      assertFalse(menuItemImpl0.requestsActionButton());
      assertFalse(menuItemImpl0.showsTextAsAction());
  }
}
