/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 05 22:03:20 GMT 2018
 */

package com.actionbarsherlock.widget;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import android.content.ComponentName;
import android.content.Context;
import com.actionbarsherlock.widget.ActivityChooserModel;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ActivityChooserModel_ESTest extends ActivityChooserModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord0 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, 2055L, 2055L);
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord1 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, 2046L, 2046L);
      boolean boolean0 = activityChooserModel_HistoricalRecord0.equals(activityChooserModel_HistoricalRecord1);
      assertFalse(boolean0);
      assertEquals(2046L, activityChooserModel_HistoricalRecord1.time);
      assertEquals(2046.0F, activityChooserModel_HistoricalRecord1.weight, 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord0 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, (-2L), (-2L));
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.remove((Object) activityChooserModel_HistoricalRecord0);
      assertEquals((-2L), activityChooserModel_HistoricalRecord0.time);
      assertEquals((-2.0F), activityChooserModel_HistoricalRecord0.weight, 0.01F);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord0 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, 2046L, 2046L);
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord1 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, 2046L, 2046L);
      boolean boolean0 = activityChooserModel_HistoricalRecord0.equals(activityChooserModel_HistoricalRecord1);
      assertTrue(boolean0);
      assertEquals(2046L, activityChooserModel_HistoricalRecord1.time);
      assertEquals(2046.0F, activityChooserModel_HistoricalRecord1.weight, 0.01F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord0 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, 2L, 2L);
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord1 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, 2046L, 2046L);
      boolean boolean0 = activityChooserModel_HistoricalRecord0.equals(activityChooserModel_HistoricalRecord1);
      assertEquals(2046L, activityChooserModel_HistoricalRecord1.time);
      assertEquals(2046.0F, activityChooserModel_HistoricalRecord1.weight, 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord0 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, 0L, 0L);
      boolean boolean0 = activityChooserModel_HistoricalRecord0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0.0F, activityChooserModel_HistoricalRecord0.weight, 0.01F);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord0 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, 2L, 2L);
      boolean boolean0 = activityChooserModel_HistoricalRecord0.equals(activityChooserModel_HistoricalRecord0);
      assertEquals(2.0F, activityChooserModel_HistoricalRecord0.weight, 0.01F);
      assertTrue(boolean0);
      assertEquals(2L, activityChooserModel_HistoricalRecord0.time);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord0 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, 2L, 2L);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      boolean boolean0 = activityChooserModel_HistoricalRecord0.equals(hashMap0);
      assertEquals(2.0F, activityChooserModel_HistoricalRecord0.weight, 0.01F);
      assertFalse(boolean0);
      assertEquals(2L, activityChooserModel_HistoricalRecord0.time);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        ActivityChooserModel.get((Context) null, "com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.database.Observable", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord0 = new ActivityChooserModel.HistoricalRecord((ComponentName) null, 2046L, 2046L);
      String string0 = activityChooserModel_HistoricalRecord0.toString();
      assertEquals("[; activity:null; time:2046; weight:2046]", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ActivityChooserModel.HistoricalRecord activityChooserModel_HistoricalRecord0 = null;
      try {
        activityChooserModel_HistoricalRecord0 = new ActivityChooserModel.HistoricalRecord("historical-records", 0L, 0L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.content.ComponentName", e);
      }
  }
}
