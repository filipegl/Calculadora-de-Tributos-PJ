/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 05 22:47:24 GMT 2018
 */

package com.actionbarsherlock.view;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import android.content.Context;
import com.actionbarsherlock.view.ActionProvider;
import com.actionbarsherlock.view.SubMenu;
import com.actionbarsherlock.widget.ShareActionProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ActionProvider_ESTest extends ActionProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Context context0 = mock(Context.class, new ViolatedAssumptionAnswer());
      ShareActionProvider shareActionProvider0 = new ShareActionProvider(context0);
      boolean boolean0 = shareActionProvider0.hasSubMenu();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Context context0 = mock(Context.class, new ViolatedAssumptionAnswer());
      ShareActionProvider shareActionProvider0 = new ShareActionProvider(context0);
      SubMenu subMenu0 = mock(SubMenu.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        shareActionProvider0.onPrepareSubMenu(subMenu0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.database.Observable", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShareActionProvider shareActionProvider0 = new ShareActionProvider((Context) null);
      // Undeclared exception!
      try { 
        shareActionProvider0.onPrepareSubMenu((SubMenu) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.widget.ShareActionProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ShareActionProvider shareActionProvider0 = new ShareActionProvider((Context) null);
      // Undeclared exception!
      try { 
        shareActionProvider0.onCreateActionView();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stub!
         //
         verifyException("android.database.Observable", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ShareActionProvider shareActionProvider0 = new ShareActionProvider((Context) null);
      ActionProvider.SubUiVisibilityListener actionProvider_SubUiVisibilityListener0 = mock(ActionProvider.SubUiVisibilityListener.class, new ViolatedAssumptionAnswer());
      shareActionProvider0.setSubUiVisibilityListener(actionProvider_SubUiVisibilityListener0);
      shareActionProvider0.subUiVisibilityChanged(false);
      assertTrue(shareActionProvider0.hasSubMenu());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ShareActionProvider shareActionProvider0 = new ShareActionProvider((Context) null);
      shareActionProvider0.subUiVisibilityChanged(false);
      assertFalse(shareActionProvider0.onPerformDefaultAction());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ShareActionProvider shareActionProvider0 = new ShareActionProvider((Context) null);
      boolean boolean0 = shareActionProvider0.onPerformDefaultAction();
      assertFalse(boolean0);
  }
}
