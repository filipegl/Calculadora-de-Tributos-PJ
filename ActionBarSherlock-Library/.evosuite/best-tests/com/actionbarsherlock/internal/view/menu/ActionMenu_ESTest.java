/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 05 22:09:28 GMT 2018
 */

package com.actionbarsherlock.internal.view.menu;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import android.content.Context;
import android.view.KeyEvent;
import com.actionbarsherlock.internal.view.menu.ActionMenu;
import com.actionbarsherlock.view.MenuItem;
import com.actionbarsherlock.view.SubMenu;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ActionMenu_ESTest extends ActionMenu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      actionMenu0.setGroupVisible((-68), true);
      assertTrue(actionMenu0.hasVisibleItems());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:9Ef");
      actionMenu0.setGroupEnabled(201, false);
      assertEquals(1, actionMenu0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      actionMenu0.setGroupCheckable((-567), false, true);
      assertTrue(actionMenu0.hasVisibleItems());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      actionMenu0.removeGroup((-567));
      assertEquals(1, actionMenu0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      MenuItem menuItem0 = actionMenu0.add((CharSequence) stringBuilder0);
      assertEquals(0, menuItem0.getOrder());
      assertEquals(0, menuItem0.getItemId());
      assertEquals(0, menuItem0.getGroupId());
      
      boolean boolean0 = actionMenu0.isShortcutKey((-1), (KeyEvent) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      int int0 = actionMenu0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      MenuItem menuItem0 = actionMenu0.add(647, 3248, 0, (CharSequence) "*'6)wWU:YEf");
      assertEquals(0, menuItem0.getOrder());
      assertEquals(3248, menuItem0.getItemId());
      assertEquals(647, menuItem0.getGroupId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      MenuItem menuItem0 = actionMenu0.add(1305, (-2016), 0, (CharSequence) "*'6)wWU:YEf");
      assertEquals(0, menuItem0.getOrder());
      assertEquals(1305, menuItem0.getGroupId());
      assertEquals((-2016), menuItem0.getItemId());
      
      boolean boolean0 = actionMenu0.performIdentifierAction((-6), 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      MenuItem menuItem0 = actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      assertEquals(0, menuItem0.getGroupId());
      assertEquals(0, menuItem0.getOrder());
      assertEquals(0, menuItem0.getItemId());
      
      MenuItem menuItem1 = actionMenu0.add((-3360), (-2016), 1, (CharSequence) "*'6)wWU:YEf");
      assertEquals((-2016), menuItem1.getItemId());
      assertEquals((-3360), menuItem1.getGroupId());
      assertEquals(1, menuItem1.getOrder());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      // Undeclared exception!
      try { 
        actionMenu0.getItem(424);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 424, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      // Undeclared exception!
      try { 
        actionMenu0.add((-1), (-4166), 194, (CharSequence) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 194, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      Context context0 = actionMenu0.getContext();
      assertNull(context0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      // Undeclared exception!
      try { 
        actionMenu0.add((-296), 10, 1305, 201);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.ActionMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      actionMenu0.setGroupVisible(0, true);
      assertTrue(actionMenu0.hasVisibleItems());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      actionMenu0.setGroupVisible(651, false);
      assertTrue(actionMenu0.hasVisibleItems());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      actionMenu0.setGroupEnabled(0, false);
      assertTrue(actionMenu0.hasVisibleItems());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      actionMenu0.setGroupEnabled((-567), false);
      assertEquals(1, actionMenu0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      StringBuilder stringBuilder0 = new StringBuilder(165);
      actionMenu0.add((CharSequence) stringBuilder0);
      actionMenu0.setGroupCheckable(165, false, true);
      assertTrue(actionMenu0.hasVisibleItems());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      actionMenu0.setGroupCheckable(0, false, false);
      assertEquals(1, actionMenu0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:9Ef");
      actionMenu0.removeGroup(0);
      assertFalse(actionMenu0.hasVisibleItems());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      actionMenu0.removeGroup(201);
      assertTrue(actionMenu0.hasVisibleItems());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      boolean boolean0 = actionMenu0.performIdentifierAction(0, (-3360));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      StringBuilder stringBuilder0 = new StringBuilder(165);
      MenuItem menuItem0 = actionMenu0.add((CharSequence) stringBuilder0);
      assertEquals(0, menuItem0.getGroupId());
      assertEquals(0, menuItem0.getOrder());
      assertEquals(0, menuItem0.getItemId());
      
      actionMenu0.setQwertyMode(true);
      boolean boolean0 = actionMenu0.isShortcutKey(105, (KeyEvent) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      boolean boolean0 = actionMenu0.performShortcut((-1), (KeyEvent) null, (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      boolean boolean0 = actionMenu0.hasVisibleItems();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      boolean boolean0 = actionMenu0.hasVisibleItems();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      boolean boolean0 = actionMenu0.performIdentifierAction((-6), 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      // Undeclared exception!
      try { 
        actionMenu0.getItem((-364));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      SubMenu subMenu0 = actionMenu0.addSubMenu(0, 0, (-214), (CharSequence) "*'6)wWU:YEf");
      assertNull(subMenu0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      SubMenu subMenu0 = actionMenu0.addSubMenu(1);
      assertNull(subMenu0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      SubMenu subMenu0 = actionMenu0.addSubMenu((-6), (-1), (-567), 0);
      assertNull(subMenu0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.clear();
      assertEquals(0, actionMenu0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.add((CharSequence) "*'6)wWU:YEf");
      actionMenu0.removeItem(0);
      assertFalse(actionMenu0.hasVisibleItems());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      // Undeclared exception!
      try { 
        actionMenu0.add(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.internal.view.menu.ActionMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      // Undeclared exception!
      try { 
        actionMenu0.findItem((-627));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      // Undeclared exception!
      try { 
        actionMenu0.removeItem(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      actionMenu0.close();
      assertFalse(actionMenu0.hasVisibleItems());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      SubMenu subMenu0 = actionMenu0.addSubMenu((CharSequence) "*'6)wWU:YEf");
      assertNull(subMenu0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ActionMenu actionMenu0 = new ActionMenu((Context) null);
      int int0 = actionMenu0.size();
      assertEquals(0, int0);
  }
}
