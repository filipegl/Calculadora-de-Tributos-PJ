/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 05 22:45:43 GMT 2018
 */

package com.actionbarsherlock.app;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import android.app.Activity;
import android.view.MenuItem;
import com.actionbarsherlock.app.SherlockFragment;
import com.actionbarsherlock.app.SherlockFragmentActivity;
import com.actionbarsherlock.view.Menu;
import com.actionbarsherlock.view.MenuInflater;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SherlockFragment_ESTest extends SherlockFragment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SherlockFragment sherlockFragment0 = new SherlockFragment();
      // Undeclared exception!
      try { 
        sherlockFragment0.onOptionsItemSelected((MenuItem) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Wrapped menu item cannot be null.
         //
         verifyException("com.actionbarsherlock.internal.view.menu.MenuItemWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SherlockFragment sherlockFragment0 = new SherlockFragment();
      sherlockFragment0.onPrepareOptionsMenu((Menu) null);
      assertFalse(sherlockFragment0.isAdded());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SherlockFragment sherlockFragment0 = new SherlockFragment();
      boolean boolean0 = sherlockFragment0.onOptionsItemSelected((com.actionbarsherlock.view.MenuItem) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SherlockFragment sherlockFragment0 = new SherlockFragment();
      // Undeclared exception!
      try { 
        sherlockFragment0.onAttach((Activity) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // SherlockFragment must be attached to a SherlockFragmentActivity.
         //
         verifyException("com.actionbarsherlock.app.SherlockFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SherlockFragment sherlockFragment0 = new SherlockFragment();
      sherlockFragment0.onDetach();
      assertFalse(sherlockFragment0.isDetached());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SherlockFragment sherlockFragment0 = new SherlockFragment();
      android.view.Menu menu0 = mock(android.view.Menu.class, new ViolatedAssumptionAnswer());
      sherlockFragment0.onPrepareOptionsMenu(menu0);
      assertEquals(0, sherlockFragment0.getId());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SherlockFragment sherlockFragment0 = new SherlockFragment();
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      MenuInflater menuInflater0 = mock(MenuInflater.class, new ViolatedAssumptionAnswer());
      sherlockFragment0.onCreateOptionsMenu(menu0, menuInflater0);
      assertEquals(0, sherlockFragment0.getId());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      android.view.Menu menu0 = mock(android.view.Menu.class, new ViolatedAssumptionAnswer());
      android.view.MenuInflater menuInflater0 = mock(android.view.MenuInflater.class, new ViolatedAssumptionAnswer());
      SherlockFragment sherlockFragment0 = new SherlockFragment();
      // Undeclared exception!
      try { 
        sherlockFragment0.onCreateOptionsMenu(menu0, menuInflater0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.actionbarsherlock.app.SherlockFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SherlockFragment sherlockFragment0 = new SherlockFragment();
      MenuItem menuItem0 = mock(MenuItem.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = sherlockFragment0.onOptionsItemSelected(menuItem0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SherlockFragment sherlockFragment0 = new SherlockFragment();
      SherlockFragmentActivity sherlockFragmentActivity0 = sherlockFragment0.getSherlockActivity();
      assertNull(sherlockFragmentActivity0);
  }
}
