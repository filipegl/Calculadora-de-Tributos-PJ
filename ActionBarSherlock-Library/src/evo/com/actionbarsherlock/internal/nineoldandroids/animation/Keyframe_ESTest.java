/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 05 22:54:11 GMT 2018
 */

package com.actionbarsherlock.internal.nineoldandroids.animation;

import org.junit.Test;
import static org.junit.Assert.*;
import android.view.animation.Interpolator;
import com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Keyframe_ESTest extends Keyframe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofFloat(592.553F);
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = (Keyframe.FloatKeyframe)keyframe0.clone();
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
      assertEquals(592.553F, keyframe0.getFraction(), 0.01F);
      assertEquals(592.553F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
      assertTrue(keyframe_FloatKeyframe0.hasValue());
      assertFalse(keyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe((-1608.0052F));
      Object object0 = keyframe_IntKeyframe0.getValue();
      Keyframe.ObjectKeyframe keyframe_ObjectKeyframe0 = new Keyframe.ObjectKeyframe(41.0F, object0);
      Object object1 = keyframe_ObjectKeyframe0.getValue();
      assertEquals(41.0F, keyframe_ObjectKeyframe0.getFraction(), 0.01F);
      assertEquals((-1608.0052F), keyframe_IntKeyframe0.getFraction(), 0.01F);
      assertTrue(keyframe_ObjectKeyframe0.hasValue());
      assertNotNull(object1);
      assertFalse(keyframe_IntKeyframe0.hasValue());
      assertEquals(0, object1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe(0.0F, 0);
      assertEquals(0, keyframe_IntKeyframe0.getIntValue());
      assertTrue(keyframe_IntKeyframe0.hasValue());
      assertEquals(0.0F, keyframe_IntKeyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofObject((-1027.0F), (Object) null);
      assertEquals((-1027.0F), keyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(0.0F, (-190.0F));
      Keyframe.ObjectKeyframe keyframe_ObjectKeyframe0 = new Keyframe.ObjectKeyframe((-190.0F), keyframe_FloatKeyframe0);
      Keyframe keyframe0 = Keyframe.ofObject(0.0F, (Object) keyframe_ObjectKeyframe0);
      assertTrue(keyframe0.hasValue());
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
      assertEquals(0.0F, keyframe0.getFraction(), 0.01F);
      assertTrue(keyframe_FloatKeyframe0.hasValue());
      assertEquals((-190.0F), keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
      assertEquals((-190.0F), keyframe_ObjectKeyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(0.0F, 0.0F);
      Keyframe keyframe0 = Keyframe.ofObject((-1027.0F), (Object) keyframe_FloatKeyframe0);
      assertEquals((-1027.0F), keyframe0.getFraction(), 0.01F);
      
      keyframe0.setFraction(0.0F);
      assertEquals(0.0F, keyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofObject(0.0F);
      assertEquals(0.0F, keyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = (Keyframe.IntKeyframe)Keyframe.ofInt(0.0F, (-911));
      assertTrue(keyframe_IntKeyframe0.hasValue());
      assertEquals((-911), keyframe_IntKeyframe0.getIntValue());
      assertEquals(0.0F, keyframe_IntKeyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = (Keyframe.IntKeyframe)Keyframe.ofInt((-190.0F), (-854));
      assertTrue(keyframe_IntKeyframe0.hasValue());
      assertEquals((-854), keyframe_IntKeyframe0.getIntValue());
      assertEquals((-190.0F), keyframe_IntKeyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofInt(0.0F);
      assertEquals(0.0F, keyframe0.getFraction(), 0.01F);
      assertFalse(keyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofInt((-2182.2F));
      assertEquals((-2182.2F), keyframe0.getFraction(), 0.01F);
      assertFalse(keyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = (Keyframe.FloatKeyframe)Keyframe.ofFloat(0.0F, 0.0F);
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
      assertTrue(keyframe_FloatKeyframe0.hasValue());
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = (Keyframe.FloatKeyframe)Keyframe.ofFloat((-1511.6F), 0.0F);
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
      assertTrue(keyframe_FloatKeyframe0.hasValue());
      assertEquals((-1511.6F), keyframe_FloatKeyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofFloat(0.0F);
      assertEquals(0.0F, keyframe0.getFraction(), 0.01F);
      assertFalse(keyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofFloat((-753.2099F));
      assertFalse(keyframe0.hasValue());
      assertEquals((-753.2099F), keyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe(0.0F);
      Keyframe.IntKeyframe keyframe_IntKeyframe1 = keyframe_IntKeyframe0.clone();
      boolean boolean0 = keyframe_IntKeyframe1.hasValue();
      assertEquals(0.0F, keyframe_IntKeyframe0.getFraction(), 0.01F);
      assertEquals(0, keyframe_IntKeyframe1.getIntValue());
      assertTrue(boolean0);
      assertEquals(0.0F, keyframe_IntKeyframe1.getFraction(), 0.01F);
      assertFalse(keyframe_IntKeyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(453.837F);
      Object object0 = keyframe_FloatKeyframe0.getValue();
      assertEquals(0.0F, object0);
      assertFalse(keyframe_FloatKeyframe0.hasValue());
      assertEquals(453.837F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofInt(3101.3486F);
      keyframe0.getType();
      assertEquals(3101.3486F, keyframe0.getFraction(), 0.01F);
      assertFalse(keyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Keyframe.ObjectKeyframe keyframe_ObjectKeyframe0 = new Keyframe.ObjectKeyframe(0.0F, "(?FFa");
      float float0 = keyframe_ObjectKeyframe0.getFraction();
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(keyframe_ObjectKeyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = (Keyframe.IntKeyframe)Keyframe.ofInt(178.473F, 1);
      float float0 = keyframe_IntKeyframe0.getFraction();
      assertEquals(1, keyframe_IntKeyframe0.getIntValue());
      assertTrue(keyframe_IntKeyframe0.hasValue());
      assertEquals(178.473F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(0.0F, 0.0F);
      Keyframe.FloatKeyframe keyframe_FloatKeyframe1 = (Keyframe.FloatKeyframe)keyframe_FloatKeyframe0.clone();
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
      assertNotSame(keyframe_FloatKeyframe1, keyframe_FloatKeyframe0);
      assertEquals(0.0F, keyframe_FloatKeyframe1.getFloatValue(), 0.01F);
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
      assertTrue(keyframe_FloatKeyframe1.hasValue());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofObject((-1.0F));
      Keyframe keyframe1 = keyframe0.clone();
      assertEquals((-1.0F), keyframe0.getFraction(), 0.01F);
      assertNotSame(keyframe1, keyframe0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(0.0F, 0.0F);
      keyframe_FloatKeyframe0.getInterpolator();
      assertTrue(keyframe_FloatKeyframe0.hasValue());
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(0.0F, 0.0F);
      keyframe_FloatKeyframe0.setInterpolator((Interpolator) null);
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
      assertTrue(keyframe_FloatKeyframe0.hasValue());
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofInt(3101.3486F);
      Keyframe.ObjectKeyframe keyframe_ObjectKeyframe0 = new Keyframe.ObjectKeyframe((-1.0F), keyframe0);
      float float0 = keyframe_ObjectKeyframe0.getFraction();
      assertTrue(keyframe_ObjectKeyframe0.hasValue());
      assertEquals(3101.3486F, keyframe0.getFraction(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
      assertFalse(keyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(0.0F, 0.0F);
      keyframe_FloatKeyframe0.setValue(keyframe_FloatKeyframe0);
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
      assertTrue(keyframe_FloatKeyframe0.hasValue());
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(0, 0);
      keyframe_FloatKeyframe0.setValue((Object) null);
      assertTrue(keyframe_FloatKeyframe0.hasValue());
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = (Keyframe.IntKeyframe)Keyframe.ofInt(1.0F, 0);
      keyframe_IntKeyframe0.setValue("=uKs>%");
      assertEquals(0, keyframe_IntKeyframe0.getIntValue());
      assertEquals(1.0F, keyframe_IntKeyframe0.getFraction(), 0.01F);
      assertTrue(keyframe_IntKeyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = (Keyframe.IntKeyframe)Keyframe.ofInt(1.0F, 0);
      keyframe_IntKeyframe0.setValue((Object) null);
      assertEquals(0, keyframe_IntKeyframe0.getIntValue());
      assertEquals(1.0F, keyframe_IntKeyframe0.getFraction(), 0.01F);
      assertTrue(keyframe_IntKeyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Keyframe.ObjectKeyframe keyframe_ObjectKeyframe0 = new Keyframe.ObjectKeyframe(0.0F, (Object) null);
      keyframe_ObjectKeyframe0.setValue(keyframe_ObjectKeyframe0);
      assertTrue(keyframe_ObjectKeyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Keyframe.ObjectKeyframe keyframe_ObjectKeyframe0 = new Keyframe.ObjectKeyframe(0.0F, (Object) null);
      keyframe_ObjectKeyframe0.setValue((Object) null);
      assertEquals(0.0F, keyframe_ObjectKeyframe0.getFraction(), 0.01F);
      assertFalse(keyframe_ObjectKeyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = new Keyframe.IntKeyframe(3625.4F);
      Object object0 = keyframe_IntKeyframe0.getValue();
      assertFalse(keyframe_IntKeyframe0.hasValue());
      
      keyframe_IntKeyframe0.setValue(object0);
      assertTrue(keyframe_IntKeyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = (Keyframe.IntKeyframe)Keyframe.ofInt(1.0F, 0);
      int int0 = keyframe_IntKeyframe0.getIntValue();
      assertEquals(0, int0);
      assertTrue(keyframe_IntKeyframe0.hasValue());
      assertEquals(1.0F, keyframe_IntKeyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = new Keyframe.FloatKeyframe(0.0F, 0.0F);
      Keyframe.FloatKeyframe keyframe_FloatKeyframe1 = keyframe_FloatKeyframe0.clone();
      assertEquals(0.0F, keyframe_FloatKeyframe1.getFloatValue(), 0.01F);
      assertNotSame(keyframe_FloatKeyframe1, keyframe_FloatKeyframe0);
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
      assertTrue(keyframe_FloatKeyframe1.hasValue());
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = (Keyframe.FloatKeyframe)Keyframe.ofFloat(3625.4F);
      float float0 = keyframe_FloatKeyframe0.getFloatValue();
      assertEquals(3625.4F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
      assertFalse(keyframe_FloatKeyframe0.hasValue());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofObject(1.0F);
      keyframe0.getValue();
      assertEquals(1.0F, keyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofObject(1.0F);
      keyframe0.getType();
      assertEquals(1.0F, keyframe0.getFraction(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Keyframe.FloatKeyframe keyframe_FloatKeyframe0 = (Keyframe.FloatKeyframe)Keyframe.ofFloat(1.0F, (float) 0);
      assertEquals(1.0F, keyframe_FloatKeyframe0.getFraction(), 0.01F);
      assertEquals(0.0F, keyframe_FloatKeyframe0.getFloatValue(), 0.01F);
      assertTrue(keyframe_FloatKeyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofInt(3.466506F);
      boolean boolean0 = keyframe0.hasValue();
      assertEquals(3.466506F, keyframe0.getFraction(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Keyframe keyframe0 = Keyframe.ofFloat(3625.4F);
      Object object0 = keyframe0.getValue();
      assertFalse(keyframe0.hasValue());
      
      keyframe0.setValue(object0);
      assertTrue(keyframe0.hasValue());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Keyframe.IntKeyframe keyframe_IntKeyframe0 = (Keyframe.IntKeyframe)Keyframe.ofInt(1.0F, 0);
      Keyframe.ObjectKeyframe keyframe_ObjectKeyframe0 = (Keyframe.ObjectKeyframe)Keyframe.ofObject(1.0F, (Object) keyframe_IntKeyframe0);
      assertTrue(keyframe_IntKeyframe0.hasValue());
      assertTrue(keyframe_ObjectKeyframe0.hasValue());
      assertEquals(1.0F, keyframe_ObjectKeyframe0.getFraction(), 0.01F);
      assertEquals(1.0F, keyframe_IntKeyframe0.getFraction(), 0.01F);
      assertEquals(0, keyframe_IntKeyframe0.getIntValue());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Keyframe.ObjectKeyframe keyframe_ObjectKeyframe0 = (Keyframe.ObjectKeyframe)Keyframe.ofObject(1.0F);
      Keyframe.ObjectKeyframe keyframe_ObjectKeyframe1 = keyframe_ObjectKeyframe0.clone();
      assertNotSame(keyframe_ObjectKeyframe1, keyframe_ObjectKeyframe0);
      assertEquals(1.0F, keyframe_ObjectKeyframe0.getFraction(), 0.01F);
  }
}
